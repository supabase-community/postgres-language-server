[workspace]
members  = ["crates/*", "lib/*", "xtask/codegen", "xtask/rules_check"]
resolver = "2"

[workspace.package]
authors      = ["Supabase Communnity"]
categories   = ["development-tools", "postgres", "supabase"]
edition      = "2021"
homepage     = "https://supabase.com/"
keywords     = ["linter", "typechecker", "postgres", "language-server"]
license      = "MIT"
repository   = "https://github.com/supabase-community/postgres_lsp"
rust-version = "1.82.0"

[workspace.dependencies]
# supporting crates unrelated to postgres
anyhow                   = "1.0.92"
biome_deserialize        = "0.6.0"
biome_deserialize_macros = "0.6.0"
biome_string_case        = "0.5.8"
bpaf                     = { version = "0.9.15", features = ["derive"] }
crossbeam                = "0.8.4"
enumflags2               = "0.7.10"
ignore                   = "0.4.23"
indexmap                 = { version = "2.6.0", features = ["serde"] }
line_index               = { path = "./lib/line_index", version = "0.0.0" }
proc-macro2              = "1.0.66"
quote                    = "1.0.33"
rayon                    = "1.10.0"
rustc-hash               = "2.0.0"
schemars                 = { version = "0.8.21", features = ["indexmap2", "smallvec"] }
serde                    = "1.0.195"
serde_json               = "1.0.114"
similar                  = "2.6.0"
smallvec                 = { version = "1.13.2", features = ["union", "const_new", "serde"] }
sqlx                     = { version = "0.8.2", features = ["runtime-async-std", "tls-rustls", "postgres", "json"] }
syn                      = "1.0.109"
termcolor                = "1.4.1"
text-size                = "1.1.1"
tokio                    = { version = "1.40.0", features = ["full"] }
toml                     = "0.8.19"
tower-lsp                = "0.20.0"
tracing                  = { version = "0.1.40", default-features = false, features = ["std"] }
tracing-subscriber       = "0.3.18"
tree-sitter              = "0.20.10"
tree_sitter_sql          = { path = "./lib/tree_sitter_sql", version = "0.0.0" }
unicode-width            = "0.1.12"

# postgres specific crates
pg_analyse                = { path = "./crates/pg_analyse", version = "0.0.0" }
pg_analyser               = { path = "./crates/pg_analyser", version = "0.0.0" }
pg_base_db                = { path = "./crates/pg_base_db", version = "0.0.0" }
pg_cli                    = { path = "./crates/pg_cli", version = "0.0.0" }
pg_commands               = { path = "./crates/pg_commands", version = "0.0.0" }
pg_completions            = { path = "./crates/pg_completions", version = "0.0.0" }
pg_configuration          = { path = "./crates/pg_configuration", version = "0.0.0" }
pg_console                = { path = "./crates/pg_console", version = "0.0.0" }
pg_diagnostics            = { path = "./crates/pg_diagnostics", version = "0.0.0" }
pg_diagnostics_categories = { path = "./crates/pg_diagnostics_categories", version = "0.0.0" }
pg_diagnostics_macros     = { path = "./crates/pg_diagnostics_macros", version = "0.0.0" }
pg_flags                  = { path = "./crates/pg_flags", version = "0.0.0" }
pg_fs                     = { path = "./crates/pg_fs", version = "0.0.0" }
pg_hover                  = { path = "./crates/pg_hover", version = "0.0.0" }
pg_inlay_hints            = { path = "./crates/pg_inlay_hints", version = "0.0.0" }
pg_lexer                  = { path = "./crates/pg_lexer", version = "0.0.0" }
pg_lexer_codegen          = { path = "./crates/pg_lexer_codegen", version = "0.0.0" }
pg_lint                   = { path = "./crates/pg_lint", version = "0.0.0" }
pg_lsp_converters         = { path = "./crates/pg_lsp_converters", version = "0.0.0" }
pg_lsp_new                = { path = "./crates/pg_lsp_new", version = "0.0.0" }
pg_markup                 = { path = "./crates/pg_markup", version = "0.0.0" }
pg_query_ext              = { path = "./crates/pg_query_ext", version = "0.0.0" }
pg_query_ext_codegen      = { path = "./crates/pg_query_ext_codegen", version = "0.0.0" }
pg_query_proto_parser     = { path = "./crates/pg_query_proto_parser", version = "0.0.0" }
pg_schema_cache           = { path = "./crates/pg_schema_cache", version = "0.0.0" }
pg_statement_splitter     = { path = "./crates/pg_statement_splitter", version = "0.0.0" }
pg_syntax                 = { path = "./crates/pg_syntax", version = "0.0.0" }
pg_text_edit              = { path = "./crates/pg_text_edit", version = "0.0.0" }
pg_treesitter_queries     = { path = "./crates/pg_treesitter_queries", version = "0.0.0" }
pg_type_resolver          = { path = "./crates/pg_type_resolver", version = "0.0.0" }
pg_typecheck              = { path = "./crates/pg_typecheck", version = "0.0.0" }
pg_workspace              = { path = "./crates/pg_workspace", version = "0.0.0" }
pg_workspace_new          = { path = "./crates/pg_workspace_new", version = "0.0.0" }

pg_test_utils = { path = "./crates/pg_test_utils" }
# parser = { path = "./crates/parser", version = "0.0.0" }
# sql_parser = { path = "./crates/sql_parser", version = "0.0.0" }
# sql_parser_codegen = { path = "./crates/sql_parser_codegen", version = "0.0.0" }


[profile.dev.package]
insta.opt-level = 3

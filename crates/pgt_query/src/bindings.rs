/* automatically generated by rust-bindgen 0.72.0 */

pub const PG_VERSION_NUM: u32 = 170004;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryError {
    pub message: *mut ::std::os::raw::c_char,
    pub funcname: *mut ::std::os::raw::c_char,
    pub filename: *mut ::std::os::raw::c_char,
    pub lineno: ::std::os::raw::c_int,
    pub cursorpos: ::std::os::raw::c_int,
    pub context: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryError"][::std::mem::size_of::<PgQueryError>() - 40usize];
    ["Alignment of PgQueryError"][::std::mem::align_of::<PgQueryError>() - 8usize];
    ["Offset of field: PgQueryError::message"]
        [::std::mem::offset_of!(PgQueryError, message) - 0usize];
    ["Offset of field: PgQueryError::funcname"]
        [::std::mem::offset_of!(PgQueryError, funcname) - 8usize];
    ["Offset of field: PgQueryError::filename"]
        [::std::mem::offset_of!(PgQueryError, filename) - 16usize];
    ["Offset of field: PgQueryError::lineno"]
        [::std::mem::offset_of!(PgQueryError, lineno) - 24usize];
    ["Offset of field: PgQueryError::cursorpos"]
        [::std::mem::offset_of!(PgQueryError, cursorpos) - 28usize];
    ["Offset of field: PgQueryError::context"]
        [::std::mem::offset_of!(PgQueryError, context) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryProtobuf {
    pub len: usize,
    pub data: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryProtobuf"][::std::mem::size_of::<PgQueryProtobuf>() - 16usize];
    ["Alignment of PgQueryProtobuf"][::std::mem::align_of::<PgQueryProtobuf>() - 8usize];
    ["Offset of field: PgQueryProtobuf::len"]
        [::std::mem::offset_of!(PgQueryProtobuf, len) - 0usize];
    ["Offset of field: PgQueryProtobuf::data"]
        [::std::mem::offset_of!(PgQueryProtobuf, data) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryScanResult {
    pub pbuf: PgQueryProtobuf,
    pub stderr_buffer: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryScanResult"][::std::mem::size_of::<PgQueryScanResult>() - 32usize];
    ["Alignment of PgQueryScanResult"][::std::mem::align_of::<PgQueryScanResult>() - 8usize];
    ["Offset of field: PgQueryScanResult::pbuf"]
        [::std::mem::offset_of!(PgQueryScanResult, pbuf) - 0usize];
    ["Offset of field: PgQueryScanResult::stderr_buffer"]
        [::std::mem::offset_of!(PgQueryScanResult, stderr_buffer) - 16usize];
    ["Offset of field: PgQueryScanResult::error"]
        [::std::mem::offset_of!(PgQueryScanResult, error) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryProtobufParseResult {
    pub parse_tree: PgQueryProtobuf,
    pub stderr_buffer: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryProtobufParseResult"]
        [::std::mem::size_of::<PgQueryProtobufParseResult>() - 32usize];
    ["Alignment of PgQueryProtobufParseResult"]
        [::std::mem::align_of::<PgQueryProtobufParseResult>() - 8usize];
    ["Offset of field: PgQueryProtobufParseResult::parse_tree"]
        [::std::mem::offset_of!(PgQueryProtobufParseResult, parse_tree) - 0usize];
    ["Offset of field: PgQueryProtobufParseResult::stderr_buffer"]
        [::std::mem::offset_of!(PgQueryProtobufParseResult, stderr_buffer) - 16usize];
    ["Offset of field: PgQueryProtobufParseResult::error"]
        [::std::mem::offset_of!(PgQueryProtobufParseResult, error) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQuerySplitStmt {
    pub stmt_location: ::std::os::raw::c_int,
    pub stmt_len: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQuerySplitStmt"][::std::mem::size_of::<PgQuerySplitStmt>() - 8usize];
    ["Alignment of PgQuerySplitStmt"][::std::mem::align_of::<PgQuerySplitStmt>() - 4usize];
    ["Offset of field: PgQuerySplitStmt::stmt_location"]
        [::std::mem::offset_of!(PgQuerySplitStmt, stmt_location) - 0usize];
    ["Offset of field: PgQuerySplitStmt::stmt_len"]
        [::std::mem::offset_of!(PgQuerySplitStmt, stmt_len) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQuerySplitResult {
    pub stmts: *mut *mut PgQuerySplitStmt,
    pub n_stmts: ::std::os::raw::c_int,
    pub stderr_buffer: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQuerySplitResult"][::std::mem::size_of::<PgQuerySplitResult>() - 32usize];
    ["Alignment of PgQuerySplitResult"][::std::mem::align_of::<PgQuerySplitResult>() - 8usize];
    ["Offset of field: PgQuerySplitResult::stmts"]
        [::std::mem::offset_of!(PgQuerySplitResult, stmts) - 0usize];
    ["Offset of field: PgQuerySplitResult::n_stmts"]
        [::std::mem::offset_of!(PgQuerySplitResult, n_stmts) - 8usize];
    ["Offset of field: PgQuerySplitResult::stderr_buffer"]
        [::std::mem::offset_of!(PgQuerySplitResult, stderr_buffer) - 16usize];
    ["Offset of field: PgQuerySplitResult::error"]
        [::std::mem::offset_of!(PgQuerySplitResult, error) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryDeparseResult {
    pub query: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryDeparseResult"][::std::mem::size_of::<PgQueryDeparseResult>() - 16usize];
    ["Alignment of PgQueryDeparseResult"][::std::mem::align_of::<PgQueryDeparseResult>() - 8usize];
    ["Offset of field: PgQueryDeparseResult::query"]
        [::std::mem::offset_of!(PgQueryDeparseResult, query) - 0usize];
    ["Offset of field: PgQueryDeparseResult::error"]
        [::std::mem::offset_of!(PgQueryDeparseResult, error) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryFingerprintResult {
    pub fingerprint: u64,
    pub fingerprint_str: *mut ::std::os::raw::c_char,
    pub stderr_buffer: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryFingerprintResult"]
        [::std::mem::size_of::<PgQueryFingerprintResult>() - 32usize];
    ["Alignment of PgQueryFingerprintResult"]
        [::std::mem::align_of::<PgQueryFingerprintResult>() - 8usize];
    ["Offset of field: PgQueryFingerprintResult::fingerprint"]
        [::std::mem::offset_of!(PgQueryFingerprintResult, fingerprint) - 0usize];
    ["Offset of field: PgQueryFingerprintResult::fingerprint_str"]
        [::std::mem::offset_of!(PgQueryFingerprintResult, fingerprint_str) - 8usize];
    ["Offset of field: PgQueryFingerprintResult::stderr_buffer"]
        [::std::mem::offset_of!(PgQueryFingerprintResult, stderr_buffer) - 16usize];
    ["Offset of field: PgQueryFingerprintResult::error"]
        [::std::mem::offset_of!(PgQueryFingerprintResult, error) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PgQueryNormalizeResult {
    pub normalized_query: *mut ::std::os::raw::c_char,
    pub error: *mut PgQueryError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of PgQueryNormalizeResult"][::std::mem::size_of::<PgQueryNormalizeResult>() - 16usize];
    ["Alignment of PgQueryNormalizeResult"]
        [::std::mem::align_of::<PgQueryNormalizeResult>() - 8usize];
    ["Offset of field: PgQueryNormalizeResult::normalized_query"]
        [::std::mem::offset_of!(PgQueryNormalizeResult, normalized_query) - 0usize];
    ["Offset of field: PgQueryNormalizeResult::error"]
        [::std::mem::offset_of!(PgQueryNormalizeResult, error) - 8usize];
};
unsafe extern "C" {
    pub fn pg_query_normalize(input: *const ::std::os::raw::c_char) -> PgQueryNormalizeResult;
}
unsafe extern "C" {
    pub fn pg_query_scan(input: *const ::std::os::raw::c_char) -> PgQueryScanResult;
}
unsafe extern "C" {
    pub fn pg_query_parse_protobuf(
        input: *const ::std::os::raw::c_char,
    ) -> PgQueryProtobufParseResult;
}
unsafe extern "C" {
    pub fn pg_query_fingerprint(input: *const ::std::os::raw::c_char) -> PgQueryFingerprintResult;
}
unsafe extern "C" {
    pub fn pg_query_split_with_scanner(input: *const ::std::os::raw::c_char) -> PgQuerySplitResult;
}
unsafe extern "C" {
    pub fn pg_query_split_with_parser(input: *const ::std::os::raw::c_char) -> PgQuerySplitResult;
}
unsafe extern "C" {
    pub fn pg_query_deparse_protobuf(parse_tree: PgQueryProtobuf) -> PgQueryDeparseResult;
}
unsafe extern "C" {
    pub fn pg_query_free_normalize_result(result: PgQueryNormalizeResult);
}
unsafe extern "C" {
    pub fn pg_query_free_scan_result(result: PgQueryScanResult);
}
unsafe extern "C" {
    pub fn pg_query_free_split_result(result: PgQuerySplitResult);
}
unsafe extern "C" {
    pub fn pg_query_free_deparse_result(result: PgQueryDeparseResult);
}
unsafe extern "C" {
    pub fn pg_query_free_protobuf_parse_result(result: PgQueryProtobufParseResult);
}
unsafe extern "C" {
    pub fn pg_query_free_fingerprint_result(result: PgQueryFingerprintResult);
}

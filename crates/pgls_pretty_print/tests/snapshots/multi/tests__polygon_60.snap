---
source: crates/pgls_pretty_print/tests/tests.rs
input_file: crates/pgls_pretty_print/tests/data/multi/polygon_60.sql
snapshot_kind: text
---
CREATE TABLE polygon_tbl ( f1 polygon );

INSERT INTO polygon_tbl (f1)
VALUES ('(2.0,0.0),(2.0,4.0),(0.0,0.0)');

INSERT INTO polygon_tbl (f1)
VALUES ('(3.0,1.0),(3.0,3.0),(1.0,0.0)');

INSERT INTO polygon_tbl (f1)
VALUES ('(1,2),(3,4),(5,6),(7,8)');

INSERT INTO polygon_tbl (f1)
VALUES ('(7,8),(5,6),(3,4),(1,2)');

INSERT INTO polygon_tbl (f1)
VALUES ('(1,2),(7,8),(5,6),(3,-4)');

INSERT INTO polygon_tbl (f1) VALUES ('(0.0,0.0)');

INSERT INTO polygon_tbl (f1) VALUES ('(0.0,1.0),(0.0,1.0)');

INSERT INTO polygon_tbl (f1) VALUES ('0.0');

INSERT INTO polygon_tbl (f1) VALUES ('(0.0 0.0');

INSERT INTO polygon_tbl (f1) VALUES ('(0,1,2)');

INSERT INTO polygon_tbl (f1) VALUES ('(0,1,2,3');

INSERT INTO polygon_tbl (f1) VALUES ('asdf');

SELECT * FROM polygon_tbl;

CREATE TABLE quad_poly_tbl ( id INT, p polygon );

INSERT INTO quad_poly_tbl
SELECT
  (x - 1) * 100 + y,
  polygon(circle(point(x * 10,
  y * 10),
  1 + (x + y) % 10))
FROM
  generate_series(1,
  100) AS x,
  generate_series(1,
  100) AS y;

INSERT INTO quad_poly_tbl
SELECT
  i,
  CAST('((200, 300),(210, 310),(230, 290))' AS polygon)
FROM
  generate_series(10001,
  11000) AS i;

INSERT INTO quad_poly_tbl
VALUES (11001,
NULL),
(11002,
NULL),
(11003,
NULL);

CREATE INDEX "quad_poly_tbl_idx" ON quad_poly_tbl USING spgist (p);

SET enable_seqscan = on;

SET enable_indexscan = off;

SET enable_bitmapscan = off;

CREATE TEMPORARY TABLE quad_poly_tbl_ord_seq2 AS
  SELECT
    RANK()
    OVER (
    ORDER BY p <-> CAST('123,456' AS point)) AS n,
    p <-> CAST('123,456' AS point) AS dist,
    id
  FROM
    quad_poly_tbl
  WHERE p <@ CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SET enable_seqscan = off;

SET enable_indexscan = off;

SET enable_bitmapscan = on;

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p << CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p << CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &< CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &< CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p && CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p && CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p >> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p >> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p <<| CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p <<| CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &<| CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p &<| CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p |&> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p |&> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p |>> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p |>> CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p <@ CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p <@ CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p @> CAST('((340,550),(343,552),(341,553))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p @> CAST('((340,550),(343,552),(341,553))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p ~= CAST('((200, 300),(210, 310),(230, 290))' AS polygon);

SELECT
  COUNT(*)
FROM
  quad_poly_tbl
WHERE p ~= CAST('((200, 300),(210, 310),(230, 290))' AS polygon);

SET enable_indexscan = on;

SET enable_bitmapscan = off;

SELECT
  RANK()
  OVER (
  ORDER BY p <-> CAST('123,456' AS point)) AS n,
  p <-> CAST('123,456' AS point) AS dist,
  id
FROM
  quad_poly_tbl
WHERE p <@ CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

CREATE TEMPORARY TABLE quad_poly_tbl_ord_idx2 AS
  SELECT
    RANK()
    OVER (
    ORDER BY p <-> CAST('123,456' AS point)) AS n,
    p <-> CAST('123,456' AS point) AS dist,
    id
  FROM
    quad_poly_tbl
  WHERE p <@ CAST('((300,300),(400,600),(600,500),(700,200))' AS polygon);

SELECT
  *
FROM
  quad_poly_tbl_ord_seq2 AS seq
  FULL OUTER JOIN quad_poly_tbl_ord_idx2 AS idx
  ON seq.n =
    idx.n AND
    seq.id =
    idx.id AND
    (seq.dist =
    idx.dist OR
    seq.dist IS NULL AND
    idx.dist IS NULL)
WHERE seq.id IS NULL OR
  idx.id IS NULL;

RESET enable_seqscan;

RESET enable_indexscan;

RESET enable_bitmapscan;

SELECT pg_input_is_valid('(2.0,0.8,0.1)', 'polygon');

SELECT
  *
FROM
  pg_input_error_info('(2.0,0.8,0.1)',
  'polygon');

SELECT pg_input_is_valid('(2.0,xyz)', 'polygon');

SELECT * FROM pg_input_error_info('(2.0,xyz)', 'polygon');

---
source: crates/pgls_pretty_print/tests/tests.rs
input_file: crates/pgls_pretty_print/tests/data/multi/alter_operator_60.sql
snapshot_kind: text
---
CREATE FUNCTION alter_op_test_fn(
  BOOLEAN,
  BOOLEAN
) RETURNS BOOLEAN AS ' SELECT NULL::BOOLEAN; ' LANGUAGE "sql" IMMUTABLE;

CREATE FUNCTION customcontsel(
  internal,
  OID,
  internal,
  INT
) RETURNS DOUBLE PRECISION AS 'contsel' LANGUAGE "internal" STABLE STRICT;

CREATE OPERATOR === (LEFTARG = BOOLEAN,
RIGHTARG = BOOLEAN,
PROCEDURE = alter_op_test_fn,
COMMUTATOR = ===,
NEGATOR = !==,
RESTRICT = customcontsel,
JOIN = contjoinsel,
HASHES,
MERGES);

SELECT
  pg_describe_object(refclassid,
  refobjid,
  refobjsubid) AS ref,
  deptype
FROM
  pg_depend
WHERE classid =
  CAST('pg_operator' AS REGCLASS) AND
  objid =
  CAST('===(bool,bool)' AS REGOPERATOR)
ORDER BY 1;

ALTER OPERATOR === (BOOLEAN, BOOLEAN) SET (restrict = NONE);

ALTER OPERATOR === (BOOLEAN, BOOLEAN) SET (join = NONE);

SELECT
  oprrest,
  oprjoin
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('boolean' AS REGTYPE);

SELECT
  pg_describe_object(refclassid,
  refobjid,
  refobjsubid) AS ref,
  deptype
FROM
  pg_depend
WHERE classid =
  CAST('pg_operator' AS REGCLASS) AND
  objid =
  CAST('===(bool,bool)' AS REGOPERATOR)
ORDER BY 1;

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (restrict = contsel);

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (join = contjoinsel);

SELECT
  oprrest,
  oprjoin
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('boolean' AS REGTYPE);

SELECT
  pg_describe_object(refclassid,
  refobjid,
  refobjsubid) AS ref,
  deptype
FROM
  pg_depend
WHERE classid =
  CAST('pg_operator' AS REGCLASS) AND
  objid =
  CAST('===(bool,bool)' AS REGOPERATOR)
ORDER BY 1;

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (restrict = NONE,
join = NONE);

SELECT
  oprrest,
  oprjoin
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('boolean' AS REGTYPE);

SELECT
  pg_describe_object(refclassid,
  refobjid,
  refobjsubid) AS ref,
  deptype
FROM
  pg_depend
WHERE classid =
  CAST('pg_operator' AS REGCLASS) AND
  objid =
  CAST('===(bool,bool)' AS REGOPERATOR)
ORDER BY 1;

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (restrict = customcontsel,
join = contjoinsel);

SELECT
  oprrest,
  oprjoin
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('boolean' AS REGTYPE);

SELECT
  pg_describe_object(refclassid,
  refobjid,
  refobjsubid) AS ref,
  deptype
FROM
  pg_depend
WHERE classid =
  CAST('pg_operator' AS REGCLASS) AND
  objid =
  CAST('===(bool,bool)' AS REGOPERATOR)
ORDER BY 1;

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (restrict = non_existent_func);

ALTER OPERATOR === (BOOLEAN,
BOOLEAN) SET (join = non_existent_func);

ALTER OPERATOR & (BIT(1),
BIT(1)) SET ("Restrict" = _int_contsel,
"Join" = _int_contjoinsel);

CREATE USER regress_alter_op_user;

SET SESSION AUTHORIZATION regress_alter_op_user;

ALTER OPERATOR === (BOOLEAN, BOOLEAN) SET (restrict = NONE);

RESET session_authorization;

CREATE FUNCTION alter_op_test_fn_bool_real(
  BOOLEAN,
  REAL
) RETURNS BOOLEAN AS ' SELECT NULL::BOOLEAN; ' LANGUAGE "sql" IMMUTABLE;

CREATE FUNCTION alter_op_test_fn_real_bool(
  REAL,
  BOOLEAN
) RETURNS BOOLEAN AS ' SELECT NULL::BOOLEAN; ' LANGUAGE "sql" IMMUTABLE;

CREATE OPERATOR === (LEFTARG = BOOLEAN,
RIGHTARG = REAL,
PROCEDURE = alter_op_test_fn_bool_real);

CREATE OPERATOR ==== (LEFTARG = REAL,
RIGHTARG = BOOLEAN,
PROCEDURE = alter_op_test_fn_real_bool);

CREATE OPERATOR !==== (LEFTARG = BOOLEAN,
RIGHTARG = REAL,
PROCEDURE = alter_op_test_fn_bool_real);

ALTER OPERATOR === (BOOLEAN, REAL) SET (merges = 'false');

ALTER OPERATOR === (BOOLEAN, REAL) SET (hashes = 'false');

ALTER OPERATOR === (BOOLEAN, REAL) SET (merges);

ALTER OPERATOR === (BOOLEAN, REAL) SET (hashes);

SELECT
  oprcanmerge,
  oprcanhash
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('real' AS REGTYPE);

ALTER OPERATOR === (BOOLEAN, REAL) SET (commutator = ====);

SELECT
  op.oprname AS operator_name,
  com.oprname AS commutator_name,
  com.oprcode AS commutator_func
FROM
  pg_operator AS op
  INNER JOIN pg_operator AS com
  ON op.oid =
    com.oprcom AND
    op.oprcom =
    com.oid
WHERE op.oprname =
  '===' AND
  op.oprleft =
  CAST('boolean' AS REGTYPE) AND
  op.oprright =
  CAST('real' AS REGTYPE);

ALTER OPERATOR === (BOOLEAN, REAL) SET (negator = ===);

ALTER OPERATOR === (BOOLEAN, REAL) SET (negator = !====);

SELECT
  op.oprname AS operator_name,
  neg.oprname AS negator_name,
  neg.oprcode AS negator_func
FROM
  pg_operator AS op
  INNER JOIN pg_operator AS neg
  ON op.oid =
    neg.oprnegate AND
    op.oprnegate =
    neg.oid
WHERE op.oprname =
  '===' AND
  op.oprleft =
  CAST('boolean' AS REGTYPE) AND
  op.oprright =
  CAST('real' AS REGTYPE);

ALTER OPERATOR === (BOOLEAN, REAL) SET (negator = !====);

ALTER OPERATOR === (BOOLEAN, REAL) SET (commutator = ====);

ALTER OPERATOR === (BOOLEAN, REAL) SET (merges);

ALTER OPERATOR === (BOOLEAN, REAL) SET (hashes);

SELECT
  oprcanmerge,
  oprcanhash,
  pg_describe_object(CAST('pg_operator' AS REGCLASS),
  oprcom,
  0) AS commutator,
  pg_describe_object(CAST('pg_operator' AS REGCLASS),
  oprnegate,
  0) AS negator
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('real' AS REGTYPE);

CREATE OPERATOR @= (LEFTARG = REAL,
RIGHTARG = BOOLEAN,
PROCEDURE = alter_op_test_fn_real_bool);

CREATE OPERATOR @!= (LEFTARG = BOOLEAN,
RIGHTARG = REAL,
PROCEDURE = alter_op_test_fn_bool_real);

ALTER OPERATOR === (BOOLEAN, REAL) SET (commutator = @=);

ALTER OPERATOR === (BOOLEAN, REAL) SET (negator = @!=);

ALTER OPERATOR === (BOOLEAN, REAL) SET (merges = 'false');

ALTER OPERATOR === (BOOLEAN, REAL) SET (hashes = 'false');

ALTER OPERATOR @= (REAL, BOOLEAN) SET (commutator = ===);

ALTER OPERATOR @!= (BOOLEAN, REAL) SET (negator = ===);

SELECT
  oprcanmerge,
  oprcanhash,
  pg_describe_object(CAST('pg_operator' AS REGCLASS),
  oprcom,
  0) AS commutator,
  pg_describe_object(CAST('pg_operator' AS REGCLASS),
  oprnegate,
  0) AS negator
FROM
  pg_operator
WHERE oprname =
  '===' AND
  oprleft =
  CAST('boolean' AS REGTYPE) AND
  oprright =
  CAST('real' AS REGTYPE);

DROP ROLE regress_alter_op_user;

DROP OPERATOR === (BOOLEAN, BOOLEAN);

DROP OPERATOR === (BOOLEAN, REAL);

DROP OPERATOR ==== (REAL, BOOLEAN);

DROP OPERATOR !==== (BOOLEAN, REAL);

DROP OPERATOR @= (REAL, BOOLEAN);

DROP OPERATOR @!= (BOOLEAN, REAL);

DROP FUNCTION customcontsel(internal, OID, internal, INT);

DROP FUNCTION alter_op_test_fn(BOOLEAN, BOOLEAN);

DROP FUNCTION alter_op_test_fn_bool_real(BOOLEAN, REAL);

DROP FUNCTION alter_op_test_fn_real_bool(REAL, BOOLEAN);

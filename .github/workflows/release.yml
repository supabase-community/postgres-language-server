name: Release PG_CLI

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  # Ultimately, we shouldn't ignore warnings.
  # We need to pass it as an ENV because inlining doesn't work on Windows.
  RUSTFLAGS: -A dead_code

jobs:
  build_and_test:
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          # - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu }
          # - { os: macos-latest, target: x86_64-apple-darwin }
          # - { os: macos-latest, target: aarch64-apple-darwin }
          # - { os: windows-latest, target: x86_64-pc-windows-msvc }
          # - { os: windows-latest, target: aarch64-pc-windows-msvc }

    runs-on: ${{ matrix.config.os }}

    outputs:
      artifact_url: ${{ steps.upload-artifacts.outputs.artifact-url }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.config.target }}
      - uses: Swatinem/rust-cache@v1
        id: rust-cache

      - name: Have we hit Cache?
        run: |
          echo "Cache hit: ${{ steps.rust-cache.outputs.cache-hit }}"

      # running containers via `services` only works on linux
      # https://github.com/actions/runner/issues/1866
      - name: 🐘 Setup postgres
        uses: ikalnytskyi/action-setup-postgres@v7

      - name: 🧪 Run Tests
        run: cargo test --release
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

      - name: 🛠️ Run Build
        run: cargo build -p pg_cli --release --target ${{ matrix.config.target }}

      - name: 🙏 Compress Files
        run: |
          tar -czf "/tmp/compressed" target/${{ matrix.config.target }}/release

      # It is not possible to return the artifacts from the matrix jobs individually.
      # Matrix outputs overwrite each other.
      # A common workaround is to upload and download the resulting artifacts.
      - name: 👆 Upload Artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.target }}.tar.gz
          path: /tmp/compressed

  create_changelog_and_release:
    runs-on: ubuntu-latest
    needs: build_and_test # make sure that tests & build work correctly
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # we need all commits to create a changelog
          fetch-depth: 0

      - name: 👇 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_and_test.outputs.artifact_url }}
          path: /tmp/artifacts

      - name: 📝 Create Changelog
        uses: orhun/git-cliff-action@v3
        id: create_changelog
        with:
          config: cliff.toml
          args: --bump --latest
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: 📂 Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.create_changelog.outputs.changelog }}
          tag_name: ${{ steps.create_changelog.outputs.version }}
          files: /tmp/artifacts/*

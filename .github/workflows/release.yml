name: Release PG_CLI

on:
  workflow_dispatch:

jobs:
  build_and_test:
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
          - { os: macos-latest, target: aarch64-apple-darwin }
          - { os: windows-latest, target: x86_64-pc-windows-msvc }
          - { os: windows-latest, target: aarch64-pc-windows-msvc }

    runs-on: ${{ matrix.config.os }}

    outputs:
      artifact_url: ${{ steps.upload-artifacts.outputs.artifact-url }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.config.target }}

      # running containers via `services` only works on linux
      # https://github.com/actions/runner/issues/1866
      - name: Setup postgres
        uses: ikalnytskyi/action-setup-postgres@v7

      - name: üß™ Run Tests
        # Ultimately, we shouldn't ignore warnings.
        run: RUSTFLAGS="-A warnings" cargo test --release
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

      - name: üõ†Ô∏è Run Build
        run: cargo build -p pg_cli --release --target ${{ matrix.config.target }}

      # It is not possible to return the artifacts from the matrix jobs individually.
      # Matrix outputs overwrite each other.
      # A common workaround is to upload and download the resulting artifacts.
      - name: üëÜ Upload Artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.target }}
          path: target/${{ matrix.config.target }}/release/

  add_assets_in_pr_comment:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Add Comment
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = '${{ needs.build_and_test.outputs.artifact_url }}';
            const comment = `üì¶ [Download Artifacts](${artifactUrl})`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'New Assets!',
              body: comment,
            });

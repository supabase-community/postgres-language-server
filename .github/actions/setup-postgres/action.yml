name: Setup Postgres
description: Setup Postgres across operating systems
inputs:
  postgres-version:
    description: Postgres Version
    default: 15

runs:
  using: composite
  steps:
    # For Windows and macOS, use the action since PostgreSQL Docker image doesn't support Windows containers
    # and macOS runners do not support Docker
    - name: Setup postgres (Windows)
      if: runner.os == 'Windows' || runner.os == 'macOS'
      id: postgres
      uses: ikalnytskyi/action-setup-postgres@v7
      with:
        postgres-version: ${{ inputs.postgres-version }}
        username: postgres
        password: postgres
        database: postgres
        port: 5432

    # Install the pglpgsql_check extension on macOS (Part 1)
    - name: Install and compile plpgsql_check
      if: runner.os == 'macOS'
      shell: bash
      run: |
        # First, ensure we're using the same PostgreSQL that the action installed
        export PATH="$(pg_config --bindir):$PATH"

        # Verify we're targeting the right PostgreSQL installation
        echo "PostgreSQL version: $(pg_config --version)"
        echo "Extension directory: $(pg_config --sharedir)/extension"
        echo "Library directory: $(pg_config --pkglibdir)"

        # Clone and build plpgsql_check
        git clone https://github.com/okbob/plpgsql_check.git
        cd plpgsql_check

        # Clean and compile
        make USE_PGXS=1 clean
        make USE_PGXS=1 all

        # Install (may need sudo depending on permissions)
        sudo make USE_PGXS=1 install

        # Verify installation
        echo "Extension control files:"
        ls -la "$(pg_config --sharedir)/extension/" | grep plpgsql || echo "No plpgsql_check found"

        echo "Extension library files:"
        ls -la "$(pg_config --pkglibdir)/" | grep plpgsql || echo "No plpgsql_check library found"

    # Install the pglpgsql_check extension on macOS (Part 2)
    - name: Create extension in database
      if: runner.os == 'macOS'
      env:
        PGSERVICE: ${{ steps.postgres.outputs.service-name }}
      run: |
        psql -c "CREATE EXTENSION plpgsql_check;"

        # Verify installation
        psql -c "SELECT extname, extversion FROM pg_extension WHERE extname = 'plpgsql_check';"

    # For Linux, use custom Docker image with plpgsql_check
    - name: Build and start PostgreSQL with plpgsql_check
      if: runner.os == 'Linux'
      shell: bash
      run: |
        docker build -t postgres-plpgsql-check:latest .
        docker run -d --name postgres \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -e POSTGRES_DB=postgres \
          -p 5432:5432 \
          postgres-plpgsql-check:latest
        # Wait for postgres to be ready
        for _ in {1..30}; do
          if docker exec postgres pg_isready -U postgres; then
            break
          fi
          sleep 1
        done

